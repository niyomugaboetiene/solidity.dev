/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { DAO, DAOInterface } from "../../../../contracts/DAO/proj.sol/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "_description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061124b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063013cf08b1461005c5780636d9a48341461008e578063b9e2bea0146100aa578063dcd6a5cd146100ca578063fe0d94c1146100e6575b600080fd5b6100766004803603810190610071919061077e565b610102565b60405161008593929190610865565b60405180910390f35b6100a860048036038101906100a391906109d8565b6101d1565b005b6100b2610260565b6040516100c193929190610ca9565b60405180910390f35b6100e460048036038101906100df919061077e565b61049f565b005b61010060048036038101906100fb919061077e565b61060a565b005b6000818154811061011257600080fd5b906000526020600020906003020160009150905080600001805461013590610d24565b80601f016020809104026020016040519081016040528092919081815260200182805461016190610d24565b80156101ae5780601f10610183576101008083540402835291602001916101ae565b820191906000526020600020905b81548152906001019060200180831161019157829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b600060405180606001604052808381526020016000815260200160001515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816102309190610f01565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505050565b60608060606000808054905090508067ffffffffffffffff811115610288576102876108ad565b5b6040519080825280602002602001820160405280156102bb57816020015b60608152602001906001900390816102a65790505b5093508067ffffffffffffffff8111156102d8576102d76108ad565b5b6040519080825280602002602001820160405280156103065781602001602082028036833780820191505090505b5092508067ffffffffffffffff811115610323576103226108ad565b5b6040519080825280602002602001820160405280156103515781602001602082028036833780820191505090505b50915060005b8181101561049857600080828154811061037457610373610fd3565b5b9060005260206000209060030201905080600001805461039390610d24565b80601f01602080910402602001604051908101604052809291908181526020018280546103bf90610d24565b801561040c5780601f106103e15761010080835404028352916020019161040c565b820191906000526020600020905b8154815290600101906020018083116103ef57829003601f168201915b505050505086838151811061042457610423610fd3565b5b6020026020010181905250806001015485838151811061044757610446610fd3565b5b6020026020010181815250508060020160009054906101000a900460ff1684838151811061047857610477610fd3565b5b602002602001019015159081151581525050508080600101915050610357565b5050909192565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561052c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105239061104e565b60405180910390fd5b6000805490508110610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a906110ba565b60405180910390fd5b60016000828154811061058957610588610fd3565b5b906000526020600020906003020160010160008282546105a99190611109565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000805490508110610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890611189565b60405180910390fd5b6000818154811061066557610664610fd3565b5b906000526020600020906003020160020160009054906101000a900460ff16156106c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bb906111f5565b60405180910390fd5b6001600082815481106106da576106d9610fd3565b5b90600052602060002090600302016001015411156107315760016000828154811061070857610707610fd3565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055505b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61075b81610748565b811461076657600080fd5b50565b60008135905061077881610752565b92915050565b6000602082840312156107945761079361073e565b5b60006107a284828501610769565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107e55780820151818401526020810190506107ca565b60008484015250505050565b6000601f19601f8301169050919050565b600061080d826107ab565b61081781856107b6565b93506108278185602086016107c7565b610830816107f1565b840191505092915050565b61084481610748565b82525050565b60008115159050919050565b61085f8161084a565b82525050565b6000606082019050818103600083015261087f8186610802565b905061088e602083018561083b565b61089b6040830184610856565b949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108e5826107f1565b810181811067ffffffffffffffff82111715610904576109036108ad565b5b80604052505050565b6000610917610734565b905061092382826108dc565b919050565b600067ffffffffffffffff821115610943576109426108ad565b5b61094c826107f1565b9050602081019050919050565b82818337600083830152505050565b600061097b61097684610928565b61090d565b905082815260208101848484011115610997576109966108a8565b5b6109a2848285610959565b509392505050565b600082601f8301126109bf576109be6108a3565b5b81356109cf848260208601610968565b91505092915050565b6000602082840312156109ee576109ed61073e565b5b600082013567ffffffffffffffff811115610a0c57610a0b610743565b5b610a18848285016109aa565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610a69826107ab565b610a738185610a4d565b9350610a838185602086016107c7565b610a8c816107f1565b840191505092915050565b6000610aa38383610a5e565b905092915050565b6000602082019050919050565b6000610ac382610a21565b610acd8185610a2c565b935083602082028501610adf85610a3d565b8060005b85811015610b1b5784840389528151610afc8582610a97565b9450610b0783610aab565b925060208a01995050600181019050610ae3565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b6281610748565b82525050565b6000610b748383610b59565b60208301905092915050565b6000602082019050919050565b6000610b9882610b2d565b610ba28185610b38565b9350610bad83610b49565b8060005b83811015610bde578151610bc58882610b68565b9750610bd083610b80565b925050600181019050610bb1565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c208161084a565b82525050565b6000610c328383610c17565b60208301905092915050565b6000602082019050919050565b6000610c5682610beb565b610c608185610bf6565b9350610c6b83610c07565b8060005b83811015610c9c578151610c838882610c26565b9750610c8e83610c3e565b925050600181019050610c6f565b5085935050505092915050565b60006060820190508181036000830152610cc38186610ab8565b90508181036020830152610cd78185610b8d565b90508181036040830152610ceb8184610c4b565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d3c57607f821691505b602082108103610d4f57610d4e610cf5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610db77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d7a565b610dc18683610d7a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610dfe610df9610df484610748565b610dd9565b610748565b9050919050565b6000819050919050565b610e1883610de3565b610e2c610e2482610e05565b848454610d87565b825550505050565b600090565b610e41610e34565b610e4c818484610e0f565b505050565b5b81811015610e7057610e65600082610e39565b600181019050610e52565b5050565b601f821115610eb557610e8681610d55565b610e8f84610d6a565b81016020851015610e9e578190505b610eb2610eaa85610d6a565b830182610e51565b50505b505050565b600082821c905092915050565b6000610ed860001984600802610eba565b1980831691505092915050565b6000610ef18383610ec7565b9150826002028217905092915050565b610f0a826107ab565b67ffffffffffffffff811115610f2357610f226108ad565b5b610f2d8254610d24565b610f38828285610e74565b600060209050601f831160018114610f6b5760008415610f59578287015190505b610f638582610ee5565b865550610fcb565b601f198416610f7986610d55565b60005b82811015610fa157848901518255600182019150602085019450602081019050610f7c565b86831015610fbe5784890151610fba601f891682610ec7565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f416c726561647920766f74656420212100000000000000000000000000000000600082015250565b60006110386010836107b6565b915061104382611002565b602082019050919050565b600060208201905081810360008301526110678161102b565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b60006110a46010836107b6565b91506110af8261106e565b602082019050919050565b600060208201905081810360008301526110d381611097565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061111482610748565b915061111f83610748565b9250828201905080821115611137576111366110da565b5b92915050565b7f496e76616c69642070726f706f73616c20212100000000000000000000000000600082015250565b60006111736013836107b6565b915061117e8261113d565b602082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f416c726561647920657865637574656420212100000000000000000000000000600082015250565b60006111df6013836107b6565b91506111ea826111a9565b602082019050919050565b6000602082019050818103600083015261120e816111d2565b905091905056fea2646970667358221220861195f4cb7ca74480cae15eb1ae04149ead5677ea9ffa28810bfff8596ed7c364736f6c634300081c0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAO__factory {
    return super.connect(runner) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new Interface(_abi) as DAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAO {
    return new Contract(address, _abi, runner) as unknown as DAO;
  }
}
