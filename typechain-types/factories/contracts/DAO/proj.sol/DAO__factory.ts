/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { DAO, DAOInterface } from "../../../../contracts/DAO/proj.sol/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "CreateProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "Vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610ae48061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063013cf08b146100465780636d9a483414610078578063dcd6a5cd14610094575b600080fd5b610060600480360381019061005b91906103c3565b6100b0565b60405161006f939291906104aa565b60405180910390f35b610092600480360381019061008d919061061d565b61017f565b005b6100ae60048036038101906100a991906103c3565b61020e565b005b600081815481106100c057600080fd5b90600052602060002090600302016000915090508060000180546100e390610695565b80601f016020809104026020016040519081016040528092919081815260200182805461010f90610695565b801561015c5780601f106101315761010080835404028352916020019161015c565b820191906000526020600020905b81548152906001019060200180831161013f57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b600060405180606001604052808381526020016000815260200160001515815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816101de9190610872565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029290610990565b60405180910390fd5b60008054905081106102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d9906109fc565b60405180910390fd5b6001600082815481106102f8576102f7610a1c565b5b906000526020600020906003020160010160008282546103189190610a7a565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6103a08161038d565b81146103ab57600080fd5b50565b6000813590506103bd81610397565b92915050565b6000602082840312156103d9576103d8610383565b5b60006103e7848285016103ae565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561042a57808201518184015260208101905061040f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610452826103f0565b61045c81856103fb565b935061046c81856020860161040c565b61047581610436565b840191505092915050565b6104898161038d565b82525050565b60008115159050919050565b6104a48161048f565b82525050565b600060608201905081810360008301526104c48186610447565b90506104d36020830185610480565b6104e0604083018461049b565b949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61052a82610436565b810181811067ffffffffffffffff82111715610549576105486104f2565b5b80604052505050565b600061055c610379565b90506105688282610521565b919050565b600067ffffffffffffffff821115610588576105876104f2565b5b61059182610436565b9050602081019050919050565b82818337600083830152505050565b60006105c06105bb8461056d565b610552565b9050828152602081018484840111156105dc576105db6104ed565b5b6105e784828561059e565b509392505050565b600082601f830112610604576106036104e8565b5b81356106148482602086016105ad565b91505092915050565b60006020828403121561063357610632610383565b5b600082013567ffffffffffffffff81111561065157610650610388565b5b61065d848285016105ef565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106ad57607f821691505b6020821081036106c0576106bf610666565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106eb565b61073286836106eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600061076f61076a6107658461038d565b61074a565b61038d565b9050919050565b6000819050919050565b61078983610754565b61079d61079582610776565b8484546106f8565b825550505050565b600090565b6107b26107a5565b6107bd818484610780565b505050565b5b818110156107e1576107d66000826107aa565b6001810190506107c3565b5050565b601f821115610826576107f7816106c6565b610800846106db565b8101602085101561080f578190505b61082361081b856106db565b8301826107c2565b50505b505050565b600082821c905092915050565b60006108496000198460080261082b565b1980831691505092915050565b60006108628383610838565b9150826002028217905092915050565b61087b826103f0565b67ffffffffffffffff811115610894576108936104f2565b5b61089e8254610695565b6108a98282856107e5565b600060209050601f8311600181146108dc57600084156108ca578287015190505b6108d48582610856565b86555061093c565b601f1984166108ea866106c6565b60005b82811015610912578489015182556001820191506020850194506020810190506108ed565b8683101561092f578489015161092b601f891682610838565b8355505b6001600288020188555050505b505050505050565b7f416c726561647920766f74656420212100000000000000000000000000000000600082015250565b600061097a6010836103fb565b915061098582610944565b602082019050919050565b600060208201905081810360008301526109a98161096d565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b60006109e66010836103fb565b91506109f1826109b0565b602082019050919050565b60006020820190508181036000830152610a15816109d9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a858261038d565b9150610a908361038d565b9250828201905080821115610aa857610aa7610a4b565b5b9291505056fea264697066735822122098bfdbb18c79ea6f8fc66882747bd4605d8ac340177d8d402358cc8e64f4644464736f6c634300081c0033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAO__factory {
    return super.connect(runner) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new Interface(_abi) as DAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAO {
    return new Contract(address, _abi, runner) as unknown as DAO;
  }
}
