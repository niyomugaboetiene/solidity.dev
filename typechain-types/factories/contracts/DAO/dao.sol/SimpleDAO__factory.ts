/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SimpleDAO,
  SimpleDAOInterface,
} from "../../../../contracts/DAO/dao.sol/SimpleDAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposal",
    outputs: [
      {
        internalType: "string[]",
        name: "description",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "voteCount",
        type: "uint256[]",
      },
      {
        internalType: "bool[]",
        name: "executed",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506111a28061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063013cf08b1461007857806349c2a1a6146100aa578063b9e2bea0146100c6578063fe0d94c1146100e6575b600080fd5b61007660048036038101906100719190610741565b610102565b005b610092600480360381019061008d9190610741565b61026d565b6040516100a193929190610828565b60405180910390f35b6100c460048036038101906100bf919061099b565b61033c565b005b6100ce6103cb565b6040516100dd93929190610c6c565b60405180910390f35b61010060048036038101906100fb9190610741565b61060a565b005b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018690610d04565b60405180910390fd5b60008054905081106101d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cd90610d70565b60405180910390fd5b6001600082815481106101ec576101eb610d90565b5b9060005260206000209060030201600101600082825461020c9190610dee565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000818154811061027d57600080fd5b90600052602060002090600302016000915090508060000180546102a090610e51565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90610e51565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b6000604051806060016040528083815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908161039b919061102e565b506020820151816001015560408201518160020160006101000a81548160ff021916908315150217905550505050565b60608060606000808054905090508067ffffffffffffffff8111156103f3576103f2610870565b5b60405190808252806020026020018201604052801561042657816020015b60608152602001906001900390816104115790505b5093508067ffffffffffffffff81111561044357610442610870565b5b6040519080825280602002602001820160405280156104715781602001602082028036833780820191505090505b5092508067ffffffffffffffff81111561048e5761048d610870565b5b6040519080825280602002602001820160405280156104bc5781602001602082028036833780820191505090505b50915060005b818110156106035760008082815481106104df576104de610d90565b5b906000526020600020906003020190508060000180546104fe90610e51565b80601f016020809104026020016040519081016040528092919081815260200182805461052a90610e51565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b505050505086838151811061058f5761058e610d90565b5b602002602001018190525080600101548583815181106105b2576105b1610d90565b5b6020026020010181815250508060020160009054906101000a900460ff168483815181106105e3576105e2610d90565b5b6020026020010190151590811515815250505080806001019150506104c2565b5050909192565b6000805490508110610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890610d70565b60405180910390fd5b600080828154811061066657610665610d90565b5b906000526020600020906003020190508060020160009054906101000a900460ff16156106c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bf9061114c565b60405180910390fd5b6001816001015411156106f35760018160020160006101000a81548160ff0219169083151502179055505b5050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61071e8161070b565b811461072957600080fd5b50565b60008135905061073b81610715565b92915050565b60006020828403121561075757610756610701565b5b60006107658482850161072c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107a857808201518184015260208101905061078d565b60008484015250505050565b6000601f19601f8301169050919050565b60006107d08261076e565b6107da8185610779565b93506107ea81856020860161078a565b6107f3816107b4565b840191505092915050565b6108078161070b565b82525050565b60008115159050919050565b6108228161080d565b82525050565b6000606082019050818103600083015261084281866107c5565b905061085160208301856107fe565b61085e6040830184610819565b949350505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108a8826107b4565b810181811067ffffffffffffffff821117156108c7576108c6610870565b5b80604052505050565b60006108da6106f7565b90506108e6828261089f565b919050565b600067ffffffffffffffff82111561090657610905610870565b5b61090f826107b4565b9050602081019050919050565b82818337600083830152505050565b600061093e610939846108eb565b6108d0565b90508281526020810184848401111561095a5761095961086b565b5b61096584828561091c565b509392505050565b600082601f83011261098257610981610866565b5b813561099284826020860161092b565b91505092915050565b6000602082840312156109b1576109b0610701565b5b600082013567ffffffffffffffff8111156109cf576109ce610706565b5b6109db8482850161096d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610a2c8261076e565b610a368185610a10565b9350610a4681856020860161078a565b610a4f816107b4565b840191505092915050565b6000610a668383610a21565b905092915050565b6000602082019050919050565b6000610a86826109e4565b610a9081856109ef565b935083602082028501610aa285610a00565b8060005b85811015610ade5784840389528151610abf8582610a5a565b9450610aca83610a6e565b925060208a01995050600181019050610aa6565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b258161070b565b82525050565b6000610b378383610b1c565b60208301905092915050565b6000602082019050919050565b6000610b5b82610af0565b610b658185610afb565b9350610b7083610b0c565b8060005b83811015610ba1578151610b888882610b2b565b9750610b9383610b43565b925050600181019050610b74565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610be38161080d565b82525050565b6000610bf58383610bda565b60208301905092915050565b6000602082019050919050565b6000610c1982610bae565b610c238185610bb9565b9350610c2e83610bca565b8060005b83811015610c5f578151610c468882610be9565b9750610c5183610c01565b925050600181019050610c32565b5085935050505092915050565b60006060820190508181036000830152610c868186610a7b565b90508181036020830152610c9a8185610b50565b90508181036040830152610cae8184610c0e565b9050949350505050565b7f596f7520616c726561647920766f746564210000000000000000000000000000600082015250565b6000610cee601283610779565b9150610cf982610cb8565b602082019050919050565b60006020820190508181036000830152610d1d81610ce1565b9050919050565b7f496e76616c69642070726f706f73616c00000000000000000000000000000000600082015250565b6000610d5a601083610779565b9150610d6582610d24565b602082019050919050565b60006020820190508181036000830152610d8981610d4d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df98261070b565b9150610e048361070b565b9250828201905080821115610e1c57610e1b610dbf565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e6957607f821691505b602082108103610e7c57610e7b610e22565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ee47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610ea7565b610eee8683610ea7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f2b610f26610f218461070b565b610f06565b61070b565b9050919050565b6000819050919050565b610f4583610f10565b610f59610f5182610f32565b848454610eb4565b825550505050565b600090565b610f6e610f61565b610f79818484610f3c565b505050565b5b81811015610f9d57610f92600082610f66565b600181019050610f7f565b5050565b601f821115610fe257610fb381610e82565b610fbc84610e97565b81016020851015610fcb578190505b610fdf610fd785610e97565b830182610f7e565b50505b505050565b600082821c905092915050565b600061100560001984600802610fe7565b1980831691505092915050565b600061101e8383610ff4565b9150826002028217905092915050565b6110378261076e565b67ffffffffffffffff8111156110505761104f610870565b5b61105a8254610e51565b611065828285610fa1565b600060209050601f8311600181146110985760008415611086578287015190505b6110908582611012565b8655506110f8565b601f1984166110a686610e82565b60005b828110156110ce578489015182556001820191506020850194506020810190506110a9565b868310156110eb57848901516110e7601f891682610ff4565b8355505b6001600288020188555050505b505050505050565b7f416c736f20657865637574656400000000000000000000000000000000000000600082015250565b6000611136600d83610779565b915061114182611100565b602082019050919050565b6000602082019050818103600083015261116581611129565b905091905056fea26469706673582212201355a8c443062f817fe6df999416ea39ae7b6aa59fc08a5b6b1b6689f2ca789364736f6c634300081c0033";

type SimpleDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleDAO__factory extends ContractFactory {
  constructor(...args: SimpleDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleDAO__factory {
    return super.connect(runner) as SimpleDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleDAOInterface {
    return new Interface(_abi) as SimpleDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleDAO {
    return new Contract(address, _abi, runner) as unknown as SimpleDAO;
  }
}
